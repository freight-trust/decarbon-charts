{"version":3,"file":"network.js","sourceRoot":"","sources":["network.ts"],"names":[],"mappings":"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","sourcesContent":["import { zoom } from \"d3-zoom\";\nimport { event as d3Event } from \"d3\";\nimport { scaleLinear } from \"d3-scale\";\nimport { max } from \"d3-array\";\nimport settings from \"carbon-components/src/globals/js/settings\";\n\n// Internal Imports\nimport { DOMUtils } from \"../../../services\";\nimport { Component } from \"../../component\";\nimport { NetworkCard } from \"./network-card\";\nimport { NetworkLine } from \"./network-line\";\n\nconst { prefix } = settings;\n\nexport class Network extends Component {\n\ttype = \"network\";\n\tdata = this.model.getDisplayData().datasets[0];\n\toptions = this.model.getOptions();\n\txMax;\n\tyMax;\n\tinnerWidth;\n\tinnerHeight;\n\txScale;\n\tyScale;\n\tparsedNodes;\n\tparsedLinks;\n\n\tcalculateInnerHeight = (yMax) => {\n\t\tconst { cellHeight } = this.options;\n\t\treturn (yMax + 1) * cellHeight;\n\t}\n\n\tcalculateInnerWidth = (xMax) => {\n\t\tconst { cellWidth } = this.options;\n\t\treturn (xMax + 1) * cellWidth;\n\t}\n\n\tcalculatePositions = () => {\n\t\tconst { nodes, links } = this.data;\n\n\t\tthis.xMax = max(nodes, ({column}) => column);\n\t\tthis.yMax = max(nodes, ({row}) => row);\n\n\t\tthis.innerWidth = this.calculateInnerWidth(this.xMax);\n\t\tthis.innerHeight = this.calculateInnerHeight(this.yMax);\n\n\t\tthis.xScale = scaleLinear()\n\t\t\t.rangeRound([0, this.innerWidth])\n\t\t\t.domain([0, this.xMax + 1]);\n\n\t\tthis.yScale = scaleLinear()\n\t\t\t.rangeRound([0, this.innerHeight])\n\t\t\t.domain([0, this.yMax + 1]);\n\n\t\tthis.parsedNodes = nodes.map( ({column, row, ...rest}) => {\n\t\t\tconst xScaled = this.xScale(column);\n\t\t\tconst yScaled = this.yScale(row);\n\n\t\t\treturn {\n\t\t\t\tx: xScaled,\n\t\t\t\ty: yScaled,\n\t\t\t\tcolumn,\n\t\t\t\trow,\n\t\t\t\t...rest\n\t\t\t};\n\t\t});\n\n\t\tthis.parsedLinks = links.map(({source, target, ...rest}) => {\n\t\t\tconst sourceNode = this.parsedNodes.find(node => node.id === source);\n\t\t\tconst targetNode = this.parsedNodes.find(node => node.id === target);\n\n\t\t\treturn {\n\t\t\t\tsource: sourceNode,\n\t\t\t\ttarget: targetNode,\n\t\t\t\t...rest\n\t\t\t};\n\t\t});\n\t}\n\n\tdrawCards(container) {\n\t\tconst { nodeHeight, nodeWidth } = this.options;\n\n\t\tconst cards = new NetworkCard(this.model, this.services, {\n\t\t\tcontainer,\n\t\t\tselector: \"rect.network-card\",\n\t\t\theight: nodeHeight,\n\t\t\twidth: nodeWidth,\n\t\t\tdata: this.parsedNodes\n\t\t});\n\n\t\tcards.render();\n\t}\n\n\tdrawLines(container) {\n\t\tconst { nodeHeight, nodeWidth } = this.options;\n\n\t\tconst lines = new NetworkLine(this.model, this.services, {\n\t\t\tcontainer,\n\t\t\tselector: \"rect.network-line\",\n\t\t\tnodeHeight: nodeHeight,\n\t\t\tnodeWidth: nodeWidth,\n\t\t\tdata: this.parsedLinks\n\t\t});\n\n\t\tlines.render();\n\t}\n\n\trender() {\n\t\tconst { width, height } = DOMUtils.getSVGElementSize(this.parent, { useAttrs: true });\n\t\tconst svg = this.getContainerSVG();\n\n\t\tconst zoomBox = svg.append(\"rect\")\n\t\t\t.attr(\"height\", height)\n\t\t\t.attr(\"width\", width)\n\t\t\t.attr(\"class\", `${prefix}--network__background`);\n\n\t\tconst container = svg.append(\"g\")\n\t\t\t.attr(\"class\", `${prefix}--network__content`)\n\t\t\t.attr(\"transform\", `translate(0,0)`);\n\n\t\t// TODO Move this into ZoomableChart class\n\t\tconst zoomed = zoom()\n\t\t\t.scaleExtent([0.25, 3])\n\t\t\t.on(\"zoom\", () => {\n\t\t\t\tcontainer.attr(\"transform\", d3Event.transform);\n\t\t\t\tcontainer.selectAll(\"text\").attr(\"user-select\", \"none\");\n\t\t\t})\n\t\t\t.on(\"end\", () => {\n\t\t\t\tcontainer.selectAll(\"text\").attr(\"user-select\", \"auto\");\n\t\t\t});\n\n\t\tsvg.call(zoomed);\n\n\t\tthis.calculatePositions();\n\t\tthis.drawCards(container);\n\t\tthis.drawLines(container);\n\t}\n}\n"]}