{"version":3,"file":"axis-scales.js","sourceRoot":"","sources":["axis-scales.ts"],"names":[],"mappings":"","sourcesContent":["import { ScaleTypes } from \"./enums\";\nimport { AxisDomain } from \"d3\";\nimport { Locale } from \"date-fns\";\n\n/**\n * options to configure a scale. not all options are used by all scales\n */\nexport interface AxisOptions {\n\t/**\n\t * type of the scale used on axis\n\t */\n\tscaleType?: ScaleTypes;\n\t/**\n\t * Whether the Axis should be used as the domain\n\t * axis of the chart. In the case of Cartesian Scales\n\t * you would expect to only have 1 axis (dimension) being used as domain\n\t * Domain usually represents labels, ordinal values, time intervals etc.\n\t */\n\tuseAsGraphDomain?: boolean;\n\t/**\n\t * Whether the Axis should be used as the range\n\t * axis of the chart. In the case of Cartesian Scales\n\t * you would expect to only have 1 axis (dimension) being used as range\n\t * Range usually follows a linear scale\n\t */\n\tuseAsGraphRange?: boolean;\n\t/**\n\t * Whether the Axis should use the specified domain\n\t * instead of it being dynamically generated based on data extents.\n\t * The type of values should depend on the scale type.\n\t * Example for continuous axis scale: [-100, 100]\n\t * Example for discrete axis scale: ['Qty', 'More', 'Sold']\n\t */\n\tdomain?: AxisDomain[];\n\tprimary?: boolean;\n\tsecondary?: boolean;\n\t/**\n\t* Whether the Axis should be forced to include 0 as a starting point\n\t* (or ending point, in case of all negative axis).\n\t* Default: true\n\t*/\n\tincludeZero?: boolean;\n\t/**\n\t * optional title for the scales\n\t */\n\ttitle?: string;\n\t/**\n\t * tick configuration\n\t */\n\tticks?: {\n\t\t/**\n\t\t * number of ticks to show\n\t\t */\n\t\tnumber?: number;\n\t\t/**\n\t\t * minimum tick value\n\t\t */\n\t\tmin?: number;\n\t\t/**\n\t\t * maximum tick value\n\t\t */\n\t\tmax?: number;\n\t\t/**\n\t\t * minimum width of a tick\n\t\t * before getting rotated (in pixels)\n\t\t */\n\t\trotateIfSmallerThan?: number;\n\t\t/**\n\t\t * function to format the ticks\n\t\t */\n\t\tformatter?: Function;\n\t};\n}\n\n/**\n * customize time series scales\n */\nexport interface TimeScaleOptions {\n\taddSpaceOnEdges?: number;\n\t/**\n\t * if it's true, days are shown as mon-sun,\n\t * otherwise days are shown as number 1-31\n\t */\n\tshowDayName?: boolean;\n\t/**\n\t * formats for each time interval\n\t */\n\ttimeIntervalFormats?: TimeIntervalFormats;\n\t/**\n\t * locale object, for more information see https://date-fns.org/v2.11.0/docs/Locale.\n\t * example: `import enUSLocaleObject from \"date-fns/locale/en-US/index\"`.\n\t * available locale objects are: https://github.com/date-fns/date-fns/tree/master/src/locale\n\t */\n\tlocaleObject?: Locale;\n}\n\n/**\n * time scales: customize ticks format for different time intervals\n */\nexport interface TickFormats {\n\tprimary?: string;\n\tsecondary?: string;\n}\n\n\nexport interface TimeIntervalFormats {\n\t\"15seconds\"?: TickFormats;\n\t\"minute\"?: TickFormats;\n\t\"30minutes\"?: TickFormats;\n\t\"hourly\"?: TickFormats;\n\t\"daily\"?: TickFormats;\n\t\"weekly\"?: TickFormats;\n\t\"monthly\"?: TickFormats;\n\t\"quarterly\"?: TickFormats;\n\t\"yearly\"?: TickFormats;\n}\n\n/**\n * customize the axes components\n */\nexport interface AxesOptions {\n\tleft?: AxisOptions;\n\tbottom?: AxisOptions;\n\tright?: AxisOptions;\n\ttop?: AxisOptions;\n}\n"]}