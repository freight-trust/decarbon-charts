{"version":3,"file":"carbon-charts-angular.js","sources":["ng://@carbon/charts-angular/base-chart.component.ts","ng://@carbon/charts-angular/bar-chart-simple.component.ts","ng://@carbon/charts-angular/bar-chart-grouped.component.ts","ng://@carbon/charts-angular/bar-chart-stacked.component.ts","ng://@carbon/charts-angular/bubble-chart.component.ts","ng://@carbon/charts-angular/donut-chart.component.ts","ng://@carbon/charts-angular/line-chart.component.ts","ng://@carbon/charts-angular/pie-chart.component.ts","ng://@carbon/charts-angular/scatter-chart.component.ts","ng://@carbon/charts-angular/charts.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tOnInit,\n\tAfterViewInit,\n\tElementRef\n} from \"@angular/core\";\n\n/**\n * Wrapper around `BaseChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-base-chart\",\n\ttemplate: ``\n})\nexport class BaseChart implements AfterViewInit, OnInit {\n\tconstructor(protected elementRef: ElementRef) {}\n\n\t/**\n\t * Data passed to charts library for displaying\n\t */\n\t@Input() set data(newData) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst dataExistsAlready = this._data !== null && this._data !== undefined;\n\n\t\tthis._data = newData;\n\n\t\tif (dataExistsAlready) {\n\t\t\tthis.chart.model.setData(newData);\n\t\t}\n\t}\n\n\tget data() {\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Options passed to charts library\n\t */\n\t@Input() set options(newOptions) {\n\t\t// If data already exists, that means the chart has been initialized\n\t\tconst optionsExistAlready = this._options !== null && this._options !== undefined;\n\n\t\tthis._options = newOptions;\n\n\t\tif (optionsExistAlready) {\n\t\t\tthis.chart.model.setOptions(newOptions);\n\t\t}\n\t}\n\n\tget options() {\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Chart width\n\t */\n\t@Input() width: any;\n\n\t/**\n\t * Chart height\n\t */\n\t@Input() height: any;\n\n\t/**\n\t * Chart container element ref\n\t */\n\t@ViewChild(\"nChart\") chartRef;\n\n\t/**\n\t * Chart object instance\n\t *\n\t * You can use this to do whatever you would normally do with a chart if you used\n\t * charts library directly.\n\t */\n\tchart;\n\n\tprivate _data: any;\n\tprivate _options: any;\n\n\tngOnInit() {\n\t\t// Width prop is mandatory for the wrappers\n\t\tif (this.width) {\n\t\t\tthis.options.width = this.width;\n\t\t}\n\n\t\t// Height prop is mandatory for the wrappers\n\t\tif (this.height) {\n\t\t\tthis.options.height = this.height;\n\t\t}\n\t}\n\n\t/**\n\t * Runs after view init to create a chart, attach it to `chartRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tconsole.log(\"You need to implement your own `ngAfterViewInit()` function\");\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { SimpleBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `SimpleBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-simple-bar-chart\",\n\ttemplate: ``\n})\nexport class SimpleBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new SimpleBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { GroupedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `GroupedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-grouped-bar-chart\",\n\ttemplate: ``\n})\nexport class GroupedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new GroupedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { StackedBarChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `StackedBarChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-stacked-bar-chart\",\n\ttemplate: ``\n})\nexport class StackedBarChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new StackedBarChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { BubbleChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `BubbleChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-bubble-chart\",\n\ttemplate: ``\n})\nexport class BubbleChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new BubbleChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { DonutChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `DonutChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-donut-chart\",\n\ttemplate: ``\n})\nexport class DonutChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new DonutChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { LineChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `LineChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-line-chart\",\n\ttemplate: ``\n})\nexport class LineChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new LineChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { PieChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `PieChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-pie-chart\",\n\ttemplate: ``\n})\nexport class PieChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new PieChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import {\n\tComponent,\n\tAfterViewInit\n} from \"@angular/core\";\n\nimport { BaseChart } from \"./base-chart.component\";\n\nimport { ScatterChart } from \"@carbon/charts\";\n\n/**\n * Wrapper around `ScatterChart` in carbon charts library\n *\n * Most functions just call their equivalent from the chart library.\n */\n@Component({\n\tselector: \"ibm-scatter-chart\",\n\ttemplate: ``\n})\nexport class ScatterChartComponent extends BaseChart implements AfterViewInit {\n\t/**\n\t * Runs after view init to create a chart, attach it to `elementRef` and draw it.\n\t */\n\tngAfterViewInit() {\n\t\tthis.chart = new ScatterChart(\n\t\t\tthis.elementRef.nativeElement,\n\t\t\t{\n\t\t\t\tdata: this.data,\n\t\t\t\toptions: this.options\n\t\t\t}\n\t\t);\n\n\t\tObject.assign(this, this.chart);\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { BaseChart } from \"./base-chart.component\";\nimport { SimpleBarChartComponent } from \"./bar-chart-simple.component\";\nimport { GroupedBarChartComponent } from \"./bar-chart-grouped.component\";\nimport { StackedBarChartComponent } from \"./bar-chart-stacked.component\";\nimport { BubbleChartComponent } from \"./bubble-chart.component\";\nimport { DonutChartComponent } from \"./donut-chart.component\";\nimport { LineChartComponent } from \"./line-chart.component\";\nimport { PieChartComponent } from \"./pie-chart.component\";\nimport { ScatterChartComponent } from \"./scatter-chart.component\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule\n\t],\n\tdeclarations: [\n\t\tBaseChart,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBubbleChartComponent,\n\t\tDonutChartComponent,\n\t\tLineChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent\n\t],\n\texports: [\n\t\tBaseChart,\n\t\tSimpleBarChartComponent,\n\t\tGroupedBarChartComponent,\n\t\tStackedBarChartComponent,\n\t\tBubbleChartComponent,\n\t\tDonutChartComponent,\n\t\tLineChartComponent,\n\t\tPieChartComponent,\n\t\tScatterChartComponent\n\t]\n})\n\nexport class ChartsModule {}\n"],"names":[],"mappings":"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"}